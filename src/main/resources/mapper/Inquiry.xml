<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bunge.inquiry.mapper.InquiryMapper">

    <!-- 문의글 삽입 -->
    <insert id="insertInquiry">
        INSERT INTO inquiry (memberId, typeId, title, content, isPrivate, isAnswered, createdAt, updatedAt, email)
        VALUES (#{memberId}, #{typeId}, #{title}, #{content}, #{isPrivate}, #{isAnswered},NOW(), NOW(),#{email})
    </insert>

    <!-- 문의글 수정 -->
    <update id="updateInquiry">
    <!-- inquiry 테이블 업데이트 -->
    UPDATE inquiry
    SET title = #{inquiry.title},
    content = #{inquiry.content},
    typeId = #{inquiry.typeId},
    updatedAt = CURRENT_TIMESTAMP,
    isPrivate = #{inquiry.isPrivate},
    isAnswered = #{inquiry.isAnswered}
    WHERE inquiryId = #{inquiry.inquiryId} AND memberId=#{memberId}
    </update>

    <!-- 문의글 삭제 -->
    <delete id="deleteInquiry">
        DELETE FROM inquiry WHERE inquiryId = #{inquiryId} AND memberId=#{memberId}
    </delete>

    <!-- 모든 문의글 조회 (페이징 적용) -->
    <select id="selectAllInquiries" resultType="inquiry">
        SELECT i.inquiryId AS inquiryId,
               i.memberId AS memberId,
               i.typeId AS typeId,
               t.typeName AS typeName,
               i.title,
               i.content,
               i.isPrivate AS isPrivate,
               i.isAnswered AS isAnswered,
               i.createdAt AS createdAt,
               i.updatedAt AS updatedAt
        FROM inquiry i
                 JOIN inquiry_type t ON i.typeId = t.typeId
        ORDER BY i.inquiryId DESC
            LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- 문의글 조회 -->
    <select id="selectInquiry" resultType="inquiry">
        SELECT i.inquiryId AS inquiryId,
               i.memberId AS memberId,
               i.typeId AS typeId,
               t.typeName AS typeName,
               i.title,
               i.content,
               i.isPrivate AS isPrivate,
               i.isAnswered AS isAnswered,
               i.createdAt AS createdAt,
               i.updatedAt AS updatedAt,
               i.email AS email
        FROM inquiry i
                 JOIN inquiry_type t ON i.typeId = t.typeId
        WHERE i.inquiryId = #{inquiryId}
    </select>

    <!-- 문의글 목록 조회 (유형 필터 및 페이징 적용) -->
    <select id="selectInquiriesByType" resultType="inquiry">
        SELECT i.inquiryId AS inquiryId,
               i.memberId AS memberId,
               i.typeId AS typeId,
               t.typeName AS typeName,
               i.title,
               i.content,
               i.isPrivate AS isPrivate,
               i.isAnswered AS isAnswered,
               i.createdAt AS createdAt,
               i.updatedAt AS updatedAt
        FROM inquiry i
                 JOIN inquiry_type t ON i.typeId = t.typeId
        WHERE i.typeId = #{typeId}
        ORDER BY i.inquiryId DESC
            LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- 리스트 카운트 조회 -->
    <select id="selectListCount" resultType="int">
        SELECT COUNT(*) FROM inquiry
    </select>

    <!-- 문의글 상세페이지 -->
    <select id="getView" resultType="inquiry">
        SELECT i.inquiryId AS inquiryId,
               i.memberId AS memberId,
               i.typeId AS typeId,
               t.typeName AS typeName,
               i.title,
               i.content,
               i.isPrivate AS isPrivate,
               i.isAnswered AS isAnswered,
               i.createdAt AS createdAt,
               i.updatedAt AS updatedAt,
               i.email AS email
        FROM inquiry i
                 JOIN inquiry_type t ON i.typeId = t.typeId
        WHERE i.inquiryId = #{inquiryId}
    </select>

    <select id="selectinquiry" resultType="inquiry">
        SELECT i.inquiryId AS inquiryId,
               i.memberId AS memberId,
               i.typeId AS typeId,
               t.typeName AS typeName,
               i.title,
               i.content,
               i.isPrivate AS isPrivate,
               i.isAnswered AS isAnswered,
               i.createdAt AS createdAt,
               i.updatedAt AS updatedAt
        FROM inquiry i
                 JOIN inquiry_type t ON i.typeId = t.typeId
        WHERE i.memberId = #{memberId}
    </select>
    <select id="getMyinquirtListCount" resultType="int">
        select count(*) from inquiry where memberId = #{id}
    </select>

    <update id="updateInquiryStatus">
        UPDATE inquiry SET isAnswered = #{isAnswered} WHERE inquiryId = #{inquiryId}
    </update>
</mapper>
