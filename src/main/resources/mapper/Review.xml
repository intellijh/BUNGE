<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bunge.review.mapper.ReviewMapper">
    <insert id="addReview">
        insert into review
        (id, isbn13, cover, linetitle, content, score, created, lastmodified, challengeperiod)
        values
        (#{id}, #{isbn13}, #{cover}, #{linetitle}, #{content}, #{score}, now(), now(), 0)
    </insert>

    <select id="getAllReviews" resultType="com.bunge.review.domain.Review">
        select *
        from review
        order by no desc
    </select>

    <select id="getBookByReview" parameterType="com.bunge.review.domain.Review" resultType="com.bunge.memo.domain.Book">
        select *
        from book
        where isbn13 = #{isbn13}
    </select>

    <update id="updateReview">
        update review
        set score = #{score}, linetitle = #{linetitle}, content = #{content}, lastmodified = now()
        where no = #{no}
    </update>

    <delete id="deleteReview">
        delete from review
        where no = #{no}
    </delete>

    <insert id="addReviewComment">
        insert into reviewcomm
        (id, reviewno, content, created)
        values
        (#{id}, #{reviewno}, #{content}, now())
    </insert>

    <select id="getReviewListCount" parameterType="com.bunge.review.filter.ReviewFilter" resultType="int">
        select count(*)
        from review
        where 1=1
        <if test="booktitle != null and booktitle != ''">
            and booktitle like concat('%', #{booktitle}, '%')
        </if>
        <if test="id != null and id != ''">
            and id like concat('%', #{id}, '%')
        </if>
        <if test="linetitle != null and linetitle != ''">
            and linetitle like concat('%', #{linetitle}, '%')
        </if>
        <if test="content != null and content != ''">
            and content like concat('%', #{content}, '%')
        </if>
        <if test="score != 0">
            and score >= #{score}
        </if>
    </select>

    <select id="getReviewList" parameterType="com.bunge.review.filter.ReviewFilter" resultType="com.bunge.review.domain.Review">
        select *
        from review
        where 1=1
        <if test="booktitle != null and booktitle != ''">
            and booktitle like concat('%', #{booktitle}, '%')
        </if>
        <if test="id != null and id != ''">
            and id like concat('%', #{id}, '%')
        </if>
        <if test="linetitle != null and linetitle != ''">
            and linetitle like concat('%', #{linetitle}, '%')
        </if>
        <if test="content != null and content != ''">
            and content like concat('%', #{content}, '%')
        </if>
        <if test="score != 0">
            and score >= #{score}
        </if>
        order by no desc
        limit #{limit} offset #{offset}
    </select>

    <select id="getReviewCommList" parameterType="com.bunge.review.domain.Review" resultType="com.bunge.review.domain.ReviewComm">
        select *
        from reviewcomm
        where reviewno = #{no}
        order by no desc
    </select>

    <select id="getReviewCommListCount" parameterType="com.bunge.review.domain.Review" resultType="int">
        select count(*)
        from reviewcomm
        where reviewno = #{no}
        order by no desc
    </select>

</mapper>
