<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bunge.study.mapper.StudyMapper">

    <select id="getSearchBook" parameterType="com.bunge.study.parameter.BookSearchRequest" resultType="com.bunge.memo.domain.Book">
        select *
        from book
        <if test="title != null and title != ''">
            where title like CONCAT('%', #{title}, '%')
        </if>
        <if test="author != null and author != ''">
            and author like CONCAT('%', #{author}, '%')
        </if>
    </select>

    <insert id="createStudyBoard" parameterType="com.bunge.study.domain.StudyBoard">
        insert into studyboard
        (id, booktitle, bookcover, title, content, startdate, enddate, challengestart, challengeend, challengeperiod, quota, state, readcount)
        values
        (#{id}, #{booktitle}, #{bookcover}, #{title}, #{content}, #{startdate}, #{enddate}, #{challengestart}, #{challengeend}, #{challengeperiod}, #{quota}, 0, 0)
    </insert>

    <select id="getStudyList" parameterType="com.bunge.study.filter.StudyBoardFilter" resultType="com.bunge.study.domain.StudyBoard">
        select s.*,
               COUNT(DISTINCT c.no) AS countcomm,
               COUNT(DISTINCT CASE WHEN sa.status = '대기' THEN sa.no ELSE NULL END) AS pendingcount
        from studyboard s
            left join studyboardcomm c on s.no = c.studyboardno
            left join studyapplication sa on s.no = sa.studyboardno
        where 1=1
        <if test="booktitle != null and booktitle != ''">
            and booktitle like CONCAT('%', #{booktitle}, '%')
        </if>
        <if test="leader != null and leader != ''">
            and leader like CONCAT('%', #{leader}, '%')
        </if>
        <if test="challengeperiod != null and challengeperiod != ''">
            <![CDATA[ and DATEDIFF(challengeend, challengestart) < #{challengeperiod} ]]>
        </if>
        <if test="state != null and state != ''">
            and state = #{state}
        </if>
        group by s.no
        order by enddate
        limit #{offset}, #{limit}
    </select>

    <select id="getStudyListCount" parameterType="com.bunge.study.filter.StudyBoardFilter" resultType="int">
        select count(*)
        from studyboard
        where 1=1
        <if test="booktitle != null and booktitle != ''">
            and booktitle like CONCAT('%', #{booktitle}, '%')
        </if>
        <if test="leader != null and leader != ''">
            and leader like CONCAT('%', #{leader}, '%')
        </if>
        <if test="challengeperiod != null and challengeperiod != ''">
            <![CDATA[ and DATEDIFF(challengeend, challengestart) < #{challengeperiod} ]]>
        </if>
        <if test="state != null and state != ''">
            and state = #{state}
        </if>
    </select>

    <select id="getDetailStudy" parameterType="int" resultType="com.bunge.study.domain.StudyBoard">
        select s.*, b.isbn13, b.author, b.pubDate, b.categoryName, b.description, b.score, b.page
        from studyboard s
                 join book b on s.booktitle = b.title
        where s.no = #{no};
    </select>

    <insert id="addStudyEvent" parameterType="com.bunge.study.domain.StudyEvent">
        insert into studyevent
        (studyBoardNo, title, start, end, className)
        values
        (#{studyBoardNo}, #{title}, #{start}, #{end}, #{className})
    </insert>

    <insert id="addBoardComment" parameterType="com.bunge.study.domain.StudyBoardComm" useGeneratedKeys="true" keyProperty="no">
        insert into studyboardcomm
        (id, studyboardno, content, ref, lev, seq, created)
        values
        (#{id}, #{studyboardno}, #{content}, 0, 0, 0, now())
    </insert>

    <update id="updateRefColumn" parameterType="int">
        update studyboardcomm
        set ref = #{no}
        where no = #{no}
    </update>

    <select id="getStudyCommList" parameterType="int" resultType="com.bunge.study.domain.StudyBoardComm">
        select *
        from studyboardcomm
        where studyboardno = #{no}
    </select>

    <select id="getStudyCommListCount" parameterType="int" resultType="int">
        select count(*)
        from studyboardcomm
        where studyboardno = #{no}
    </select>

    <select id="getEventsByStudyBoardNo" parameterType="int" resultType="com.bunge.study.domain.StudyEvent">
        select *
        from studyevent
        where studyboardno = #{studyBoardNo}
    </select>

    <insert id="applyStudy" parameterType="com.bunge.study.domain.StudyApplication">
        insert into studyapplication
        (studyboardno, application_id, application_content, request_date, response_date)
        values
        (#{studyboardno}, #{application_id}, #{application_content}, now(), now())
    </insert>

    <select id="getApplicationsByStudyBoardNo" parameterType="int" resultType="com.bunge.study.domain.StudyApplication">
        select *
        from studyapplication
        where studyboardno = #{studyboardno}
    </select>

    <update id="approveApplication" parameterType="com.bunge.study.parameter.ApproveApplicationRequest">
        update studyapplication
        set status = #{status}
        where no = #{no}
    </update>

    <update id="rejectApplication" parameterType="com.bunge.study.parameter.RejectApplicationRequest">
        update studyapplication
        set status = #{status}
        where no = #{no}
    </update>

    <update id="cancelApprove" parameterType="com.bunge.study.parameter.ApproveApplicationRequest">
        update studyapplication
        set status = #{status}
        where no = #{no}
    </update>

    <update id="cancelReject" parameterType="com.bunge.study.parameter.RejectApplicationRequest">
        update studyapplication
        set status = #{status}
        where no = #{no}
    </update>

</mapper>